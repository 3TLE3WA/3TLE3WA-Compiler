
// Generated from SysY.g4 by ANTLR 4.12.0

#include "SysYLexer.h"

using namespace antlr4;

using namespace antlr4;

namespace {

struct SysYLexerStaticData final {
    SysYLexerStaticData(std::vector<std::string> ruleNames, std::vector<std::string> channelNames,
                        std::vector<std::string> modeNames, std::vector<std::string> literalNames,
                        std::vector<std::string> symbolicNames)
        : ruleNames(std::move(ruleNames)),
          channelNames(std::move(channelNames)),
          modeNames(std::move(modeNames)),
          literalNames(std::move(literalNames)),
          symbolicNames(std::move(symbolicNames)),
          vocabulary(this->literalNames, this->symbolicNames) {}

    SysYLexerStaticData(const SysYLexerStaticData&) = delete;
    SysYLexerStaticData(SysYLexerStaticData&&) = delete;
    SysYLexerStaticData& operator=(const SysYLexerStaticData&) = delete;
    SysYLexerStaticData& operator=(SysYLexerStaticData&&) = delete;

    std::vector<antlr4::dfa::DFA> decisionToDFA;
    antlr4::atn::PredictionContextCache sharedContextCache;
    const std::vector<std::string> ruleNames;
    const std::vector<std::string> channelNames;
    const std::vector<std::string> modeNames;
    const std::vector<std::string> literalNames;
    const std::vector<std::string> symbolicNames;
    const antlr4::dfa::Vocabulary vocabulary;
    antlr4::atn::SerializedATNView serializedATN;
    std::unique_ptr<antlr4::atn::ATN> atn;
};

::antlr4::internal::OnceFlag sysylexerLexerOnceFlag;
SysYLexerStaticData* sysylexerLexerStaticData = nullptr;

void sysylexerLexerInitialize() {
    assert(sysylexerLexerStaticData == nullptr);
    auto staticData = std::make_unique<SysYLexerStaticData>(
        std::vector<std::string>{"T__0",
                                 "T__1",
                                 "T__2",
                                 "T__3",
                                 "T__4",
                                 "T__5",
                                 "T__6",
                                 "T__7",
                                 "T__8",
                                 "T__9",
                                 "T__10",
                                 "T__11",
                                 "T__12",
                                 "T__13",
                                 "Int",
                                 "Void",
                                 "Const",
                                 "Return",
                                 "If",
                                 "Else",
                                 "While",
                                 "For",
                                 "Do",
                                 "Break",
                                 "Continue",
                                 "Lparen",
                                 "Rparen",
                                 "Lbrkt",
                                 "Rbrkt",
                                 "Lbrace",
                                 "Rbrace",
                                 "Comma",
                                 "Semicolon",
                                 "Minus",
                                 "Addition",
                                 "Exclamation",
                                 "Multiplication",
                                 "Division",
                                 "Modulo",
                                 "LAND",
                                 "LOR",
                                 "EQ",
                                 "NEQ",
                                 "LT",
                                 "LE",
                                 "GT",
                                 "GE",
                                 "IntLiteral",
                                 "FloatLiteral",
                                 "Identifier",
                                 "Whitespace",
                                 "Newline",
                                 "BlockComment",
                                 "LineComment"},
        std::vector<std::string>{"DEFAULT_TOKEN_CHANNEL", "HIDDEN"}, std::vector<std::string>{"DEFAULT_MODE"},
        std::vector<std::string>{"",        "'float'",    "'='",      "'*='", "'/='",   "'%='",    "'+='",  "'-='",
                                 "'<<='",   "'>>='",      "'&='",     "'^='", "'|='",   "'&'",     "'~'",   "'int'",
                                 "'void'",  "'const'",    "'return'", "'if'", "'else'", "'while'", "'for'", "'do'",
                                 "'break'", "'continue'", "'('",      "')'",  "'['",    "']'",     "'{'",   "'}'",
                                 "','",     "';'",        "'-'",      "'+'",  "'!'",    "'*'",     "'/'",   "'%'",
                                 "'&&'",    "'||'",       "'=='",     "'!='", "'<'",    "'<='",    "'>'",   "'>='"},
        std::vector<std::string>{"",
                                 "",
                                 "",
                                 "",
                                 "",
                                 "",
                                 "",
                                 "",
                                 "",
                                 "",
                                 "",
                                 "",
                                 "",
                                 "",
                                 "",
                                 "Int",
                                 "Void",
                                 "Const",
                                 "Return",
                                 "If",
                                 "Else",
                                 "While",
                                 "For",
                                 "Do",
                                 "Break",
                                 "Continue",
                                 "Lparen",
                                 "Rparen",
                                 "Lbrkt",
                                 "Rbrkt",
                                 "Lbrace",
                                 "Rbrace",
                                 "Comma",
                                 "Semicolon",
                                 "Minus",
                                 "Addition",
                                 "Exclamation",
                                 "Multiplication",
                                 "Division",
                                 "Modulo",
                                 "LAND",
                                 "LOR",
                                 "EQ",
                                 "NEQ",
                                 "LT",
                                 "LE",
                                 "GT",
                                 "GE",
                                 "IntLiteral",
                                 "FloatLiteral",
                                 "Identifier",
                                 "Whitespace",
                                 "Newline",
                                 "BlockComment",
                                 "LineComment"});
    static const int32_t serializedATNSegment[] = {
        4,   0,   54,  396, 6,   -1,  2,   0,   7,   0,   2,   1,   7,   1,   2,   2,   7,   2,   2,   3,   7,   3,
        2,   4,   7,   4,   2,   5,   7,   5,   2,   6,   7,   6,   2,   7,   7,   7,   2,   8,   7,   8,   2,   9,
        7,   9,   2,   10,  7,   10,  2,   11,  7,   11,  2,   12,  7,   12,  2,   13,  7,   13,  2,   14,  7,   14,
        2,   15,  7,   15,  2,   16,  7,   16,  2,   17,  7,   17,  2,   18,  7,   18,  2,   19,  7,   19,  2,   20,
        7,   20,  2,   21,  7,   21,  2,   22,  7,   22,  2,   23,  7,   23,  2,   24,  7,   24,  2,   25,  7,   25,
        2,   26,  7,   26,  2,   27,  7,   27,  2,   28,  7,   28,  2,   29,  7,   29,  2,   30,  7,   30,  2,   31,
        7,   31,  2,   32,  7,   32,  2,   33,  7,   33,  2,   34,  7,   34,  2,   35,  7,   35,  2,   36,  7,   36,
        2,   37,  7,   37,  2,   38,  7,   38,  2,   39,  7,   39,  2,   40,  7,   40,  2,   41,  7,   41,  2,   42,
        7,   42,  2,   43,  7,   43,  2,   44,  7,   44,  2,   45,  7,   45,  2,   46,  7,   46,  2,   47,  7,   47,
        2,   48,  7,   48,  2,   49,  7,   49,  2,   50,  7,   50,  2,   51,  7,   51,  2,   52,  7,   52,  2,   53,
        7,   53,  1,   0,   1,   0,   1,   0,   1,   0,   1,   0,   1,   0,   1,   1,   1,   1,   1,   2,   1,   2,
        1,   2,   1,   3,   1,   3,   1,   3,   1,   4,   1,   4,   1,   4,   1,   5,   1,   5,   1,   5,   1,   6,
        1,   6,   1,   6,   1,   7,   1,   7,   1,   7,   1,   7,   1,   8,   1,   8,   1,   8,   1,   8,   1,   9,
        1,   9,   1,   9,   1,   10,  1,   10,  1,   10,  1,   11,  1,   11,  1,   11,  1,   12,  1,   12,  1,   13,
        1,   13,  1,   14,  1,   14,  1,   14,  1,   14,  1,   15,  1,   15,  1,   15,  1,   15,  1,   15,  1,   16,
        1,   16,  1,   16,  1,   16,  1,   16,  1,   16,  1,   17,  1,   17,  1,   17,  1,   17,  1,   17,  1,   17,
        1,   17,  1,   18,  1,   18,  1,   18,  1,   19,  1,   19,  1,   19,  1,   19,  1,   19,  1,   20,  1,   20,
        1,   20,  1,   20,  1,   20,  1,   20,  1,   21,  1,   21,  1,   21,  1,   21,  1,   22,  1,   22,  1,   22,
        1,   23,  1,   23,  1,   23,  1,   23,  1,   23,  1,   23,  1,   24,  1,   24,  1,   24,  1,   24,  1,   24,
        1,   24,  1,   24,  1,   24,  1,   24,  1,   25,  1,   25,  1,   26,  1,   26,  1,   27,  1,   27,  1,   28,
        1,   28,  1,   29,  1,   29,  1,   30,  1,   30,  1,   31,  1,   31,  1,   32,  1,   32,  1,   33,  1,   33,
        1,   34,  1,   34,  1,   35,  1,   35,  1,   36,  1,   36,  1,   37,  1,   37,  1,   38,  1,   38,  1,   39,
        1,   39,  1,   39,  1,   40,  1,   40,  1,   40,  1,   41,  1,   41,  1,   41,  1,   42,  1,   42,  1,   42,
        1,   43,  1,   43,  1,   44,  1,   44,  1,   44,  1,   45,  1,   45,  1,   46,  1,   46,  1,   46,  1,   47,
        4,   47,  263, 8,   47,  11,  47,  12,  47,  264, 1,   47,  1,   47,  1,   47,  1,   47,  3,   47,  271, 8,
        47,  1,   47,  4,   47,  274, 8,   47,  11,  47,  12,  47,  275, 3,   47,  278, 8,   47,  1,   48,  4,   48,
        281, 8,   48,  11,  48,  12,  48,  282, 1,   48,  5,   48,  286, 8,   48,  10,  48,  12,  48,  289, 9,   48,
        1,   48,  1,   48,  5,   48,  293, 8,   48,  10,  48,  12,  48,  296, 9,   48,  3,   48,  298, 8,   48,  1,
        48,  1,   48,  3,   48,  302, 8,   48,  1,   48,  4,   48,  305, 8,   48,  11,  48,  12,  48,  306, 3,   48,
        309, 8,   48,  1,   48,  3,   48,  312, 8,   48,  1,   48,  1,   48,  1,   48,  1,   48,  3,   48,  318, 8,
        48,  1,   48,  5,   48,  321, 8,   48,  10,  48,  12,  48,  324, 9,   48,  1,   48,  1,   48,  5,   48,  328,
        8,   48,  10,  48,  12,  48,  331, 9,   48,  1,   48,  1,   48,  3,   48,  335, 8,   48,  1,   48,  4,   48,
        338, 8,   48,  11,  48,  12,  48,  339, 3,   48,  342, 8,   48,  1,   48,  3,   48,  345, 8,   48,  3,   48,
        347, 8,   48,  1,   49,  1,   49,  5,   49,  351, 8,   49,  10,  49,  12,  49,  354, 9,   49,  1,   50,  4,
        50,  357, 8,   50,  11,  50,  12,  50,  358, 1,   50,  1,   50,  1,   51,  1,   51,  3,   51,  365, 8,   51,
        1,   51,  3,   51,  368, 8,   51,  1,   51,  1,   51,  1,   52,  1,   52,  1,   52,  1,   52,  5,   52,  376,
        8,   52,  10,  52,  12,  52,  379, 9,   52,  1,   52,  1,   52,  1,   52,  1,   52,  1,   52,  1,   53,  1,
        53,  1,   53,  1,   53,  5,   53,  390, 8,   53,  10,  53,  12,  53,  393, 9,   53,  1,   53,  1,   53,  1,
        377, 0,   54,  1,   1,   3,   2,   5,   3,   7,   4,   9,   5,   11,  6,   13,  7,   15,  8,   17,  9,   19,
        10,  21,  11,  23,  12,  25,  13,  27,  14,  29,  15,  31,  16,  33,  17,  35,  18,  37,  19,  39,  20,  41,
        21,  43,  22,  45,  23,  47,  24,  49,  25,  51,  26,  53,  27,  55,  28,  57,  29,  59,  30,  61,  31,  63,
        32,  65,  33,  67,  34,  69,  35,  71,  36,  73,  37,  75,  38,  77,  39,  79,  40,  81,  41,  83,  42,  85,
        43,  87,  44,  89,  45,  91,  46,  93,  47,  95,  48,  97,  49,  99,  50,  101, 51,  103, 52,  105, 53,  107,
        54,  1,   0,   10,  1,   0,   48,  57,  3,   0,   48,  57,  65,  70,  97,  102, 2,   0,   69,  69,  101, 101,
        2,   0,   43,  43,  45,  45,  4,   0,   70,  70,  76,  76,  102, 102, 108, 108, 2,   0,   80,  80,  112, 112,
        3,   0,   65,  90,  95,  95,  97,  122, 4,   0,   48,  57,  65,  90,  95,  95,  97,  122, 2,   0,   9,   9,
        32,  32,  2,   0,   10,  10,  13,  13,  421, 0,   1,   1,   0,   0,   0,   0,   3,   1,   0,   0,   0,   0,
        5,   1,   0,   0,   0,   0,   7,   1,   0,   0,   0,   0,   9,   1,   0,   0,   0,   0,   11,  1,   0,   0,
        0,   0,   13,  1,   0,   0,   0,   0,   15,  1,   0,   0,   0,   0,   17,  1,   0,   0,   0,   0,   19,  1,
        0,   0,   0,   0,   21,  1,   0,   0,   0,   0,   23,  1,   0,   0,   0,   0,   25,  1,   0,   0,   0,   0,
        27,  1,   0,   0,   0,   0,   29,  1,   0,   0,   0,   0,   31,  1,   0,   0,   0,   0,   33,  1,   0,   0,
        0,   0,   35,  1,   0,   0,   0,   0,   37,  1,   0,   0,   0,   0,   39,  1,   0,   0,   0,   0,   41,  1,
        0,   0,   0,   0,   43,  1,   0,   0,   0,   0,   45,  1,   0,   0,   0,   0,   47,  1,   0,   0,   0,   0,
        49,  1,   0,   0,   0,   0,   51,  1,   0,   0,   0,   0,   53,  1,   0,   0,   0,   0,   55,  1,   0,   0,
        0,   0,   57,  1,   0,   0,   0,   0,   59,  1,   0,   0,   0,   0,   61,  1,   0,   0,   0,   0,   63,  1,
        0,   0,   0,   0,   65,  1,   0,   0,   0,   0,   67,  1,   0,   0,   0,   0,   69,  1,   0,   0,   0,   0,
        71,  1,   0,   0,   0,   0,   73,  1,   0,   0,   0,   0,   75,  1,   0,   0,   0,   0,   77,  1,   0,   0,
        0,   0,   79,  1,   0,   0,   0,   0,   81,  1,   0,   0,   0,   0,   83,  1,   0,   0,   0,   0,   85,  1,
        0,   0,   0,   0,   87,  1,   0,   0,   0,   0,   89,  1,   0,   0,   0,   0,   91,  1,   0,   0,   0,   0,
        93,  1,   0,   0,   0,   0,   95,  1,   0,   0,   0,   0,   97,  1,   0,   0,   0,   0,   99,  1,   0,   0,
        0,   0,   101, 1,   0,   0,   0,   0,   103, 1,   0,   0,   0,   0,   105, 1,   0,   0,   0,   0,   107, 1,
        0,   0,   0,   1,   109, 1,   0,   0,   0,   3,   115, 1,   0,   0,   0,   5,   117, 1,   0,   0,   0,   7,
        120, 1,   0,   0,   0,   9,   123, 1,   0,   0,   0,   11,  126, 1,   0,   0,   0,   13,  129, 1,   0,   0,
        0,   15,  132, 1,   0,   0,   0,   17,  136, 1,   0,   0,   0,   19,  140, 1,   0,   0,   0,   21,  143, 1,
        0,   0,   0,   23,  146, 1,   0,   0,   0,   25,  149, 1,   0,   0,   0,   27,  151, 1,   0,   0,   0,   29,
        153, 1,   0,   0,   0,   31,  157, 1,   0,   0,   0,   33,  162, 1,   0,   0,   0,   35,  168, 1,   0,   0,
        0,   37,  175, 1,   0,   0,   0,   39,  178, 1,   0,   0,   0,   41,  183, 1,   0,   0,   0,   43,  189, 1,
        0,   0,   0,   45,  193, 1,   0,   0,   0,   47,  196, 1,   0,   0,   0,   49,  202, 1,   0,   0,   0,   51,
        211, 1,   0,   0,   0,   53,  213, 1,   0,   0,   0,   55,  215, 1,   0,   0,   0,   57,  217, 1,   0,   0,
        0,   59,  219, 1,   0,   0,   0,   61,  221, 1,   0,   0,   0,   63,  223, 1,   0,   0,   0,   65,  225, 1,
        0,   0,   0,   67,  227, 1,   0,   0,   0,   69,  229, 1,   0,   0,   0,   71,  231, 1,   0,   0,   0,   73,
        233, 1,   0,   0,   0,   75,  235, 1,   0,   0,   0,   77,  237, 1,   0,   0,   0,   79,  239, 1,   0,   0,
        0,   81,  242, 1,   0,   0,   0,   83,  245, 1,   0,   0,   0,   85,  248, 1,   0,   0,   0,   87,  251, 1,
        0,   0,   0,   89,  253, 1,   0,   0,   0,   91,  256, 1,   0,   0,   0,   93,  258, 1,   0,   0,   0,   95,
        277, 1,   0,   0,   0,   97,  346, 1,   0,   0,   0,   99,  348, 1,   0,   0,   0,   101, 356, 1,   0,   0,
        0,   103, 367, 1,   0,   0,   0,   105, 371, 1,   0,   0,   0,   107, 385, 1,   0,   0,   0,   109, 110, 5,
        102, 0,   0,   110, 111, 5,   108, 0,   0,   111, 112, 5,   111, 0,   0,   112, 113, 5,   97,  0,   0,   113,
        114, 5,   116, 0,   0,   114, 2,   1,   0,   0,   0,   115, 116, 5,   61,  0,   0,   116, 4,   1,   0,   0,
        0,   117, 118, 5,   42,  0,   0,   118, 119, 5,   61,  0,   0,   119, 6,   1,   0,   0,   0,   120, 121, 5,
        47,  0,   0,   121, 122, 5,   61,  0,   0,   122, 8,   1,   0,   0,   0,   123, 124, 5,   37,  0,   0,   124,
        125, 5,   61,  0,   0,   125, 10,  1,   0,   0,   0,   126, 127, 5,   43,  0,   0,   127, 128, 5,   61,  0,
        0,   128, 12,  1,   0,   0,   0,   129, 130, 5,   45,  0,   0,   130, 131, 5,   61,  0,   0,   131, 14,  1,
        0,   0,   0,   132, 133, 5,   60,  0,   0,   133, 134, 5,   60,  0,   0,   134, 135, 5,   61,  0,   0,   135,
        16,  1,   0,   0,   0,   136, 137, 5,   62,  0,   0,   137, 138, 5,   62,  0,   0,   138, 139, 5,   61,  0,
        0,   139, 18,  1,   0,   0,   0,   140, 141, 5,   38,  0,   0,   141, 142, 5,   61,  0,   0,   142, 20,  1,
        0,   0,   0,   143, 144, 5,   94,  0,   0,   144, 145, 5,   61,  0,   0,   145, 22,  1,   0,   0,   0,   146,
        147, 5,   124, 0,   0,   147, 148, 5,   61,  0,   0,   148, 24,  1,   0,   0,   0,   149, 150, 5,   38,  0,
        0,   150, 26,  1,   0,   0,   0,   151, 152, 5,   126, 0,   0,   152, 28,  1,   0,   0,   0,   153, 154, 5,
        105, 0,   0,   154, 155, 5,   110, 0,   0,   155, 156, 5,   116, 0,   0,   156, 30,  1,   0,   0,   0,   157,
        158, 5,   118, 0,   0,   158, 159, 5,   111, 0,   0,   159, 160, 5,   105, 0,   0,   160, 161, 5,   100, 0,
        0,   161, 32,  1,   0,   0,   0,   162, 163, 5,   99,  0,   0,   163, 164, 5,   111, 0,   0,   164, 165, 5,
        110, 0,   0,   165, 166, 5,   115, 0,   0,   166, 167, 5,   116, 0,   0,   167, 34,  1,   0,   0,   0,   168,
        169, 5,   114, 0,   0,   169, 170, 5,   101, 0,   0,   170, 171, 5,   116, 0,   0,   171, 172, 5,   117, 0,
        0,   172, 173, 5,   114, 0,   0,   173, 174, 5,   110, 0,   0,   174, 36,  1,   0,   0,   0,   175, 176, 5,
        105, 0,   0,   176, 177, 5,   102, 0,   0,   177, 38,  1,   0,   0,   0,   178, 179, 5,   101, 0,   0,   179,
        180, 5,   108, 0,   0,   180, 181, 5,   115, 0,   0,   181, 182, 5,   101, 0,   0,   182, 40,  1,   0,   0,
        0,   183, 184, 5,   119, 0,   0,   184, 185, 5,   104, 0,   0,   185, 186, 5,   105, 0,   0,   186, 187, 5,
        108, 0,   0,   187, 188, 5,   101, 0,   0,   188, 42,  1,   0,   0,   0,   189, 190, 5,   102, 0,   0,   190,
        191, 5,   111, 0,   0,   191, 192, 5,   114, 0,   0,   192, 44,  1,   0,   0,   0,   193, 194, 5,   100, 0,
        0,   194, 195, 5,   111, 0,   0,   195, 46,  1,   0,   0,   0,   196, 197, 5,   98,  0,   0,   197, 198, 5,
        114, 0,   0,   198, 199, 5,   101, 0,   0,   199, 200, 5,   97,  0,   0,   200, 201, 5,   107, 0,   0,   201,
        48,  1,   0,   0,   0,   202, 203, 5,   99,  0,   0,   203, 204, 5,   111, 0,   0,   204, 205, 5,   110, 0,
        0,   205, 206, 5,   116, 0,   0,   206, 207, 5,   105, 0,   0,   207, 208, 5,   110, 0,   0,   208, 209, 5,
        117, 0,   0,   209, 210, 5,   101, 0,   0,   210, 50,  1,   0,   0,   0,   211, 212, 5,   40,  0,   0,   212,
        52,  1,   0,   0,   0,   213, 214, 5,   41,  0,   0,   214, 54,  1,   0,   0,   0,   215, 216, 5,   91,  0,
        0,   216, 56,  1,   0,   0,   0,   217, 218, 5,   93,  0,   0,   218, 58,  1,   0,   0,   0,   219, 220, 5,
        123, 0,   0,   220, 60,  1,   0,   0,   0,   221, 222, 5,   125, 0,   0,   222, 62,  1,   0,   0,   0,   223,
        224, 5,   44,  0,   0,   224, 64,  1,   0,   0,   0,   225, 226, 5,   59,  0,   0,   226, 66,  1,   0,   0,
        0,   227, 228, 5,   45,  0,   0,   228, 68,  1,   0,   0,   0,   229, 230, 5,   43,  0,   0,   230, 70,  1,
        0,   0,   0,   231, 232, 5,   33,  0,   0,   232, 72,  1,   0,   0,   0,   233, 234, 5,   42,  0,   0,   234,
        74,  1,   0,   0,   0,   235, 236, 5,   47,  0,   0,   236, 76,  1,   0,   0,   0,   237, 238, 5,   37,  0,
        0,   238, 78,  1,   0,   0,   0,   239, 240, 5,   38,  0,   0,   240, 241, 5,   38,  0,   0,   241, 80,  1,
        0,   0,   0,   242, 243, 5,   124, 0,   0,   243, 244, 5,   124, 0,   0,   244, 82,  1,   0,   0,   0,   245,
        246, 5,   61,  0,   0,   246, 247, 5,   61,  0,   0,   247, 84,  1,   0,   0,   0,   248, 249, 5,   33,  0,
        0,   249, 250, 5,   61,  0,   0,   250, 86,  1,   0,   0,   0,   251, 252, 5,   60,  0,   0,   252, 88,  1,
        0,   0,   0,   253, 254, 5,   60,  0,   0,   254, 255, 5,   61,  0,   0,   255, 90,  1,   0,   0,   0,   256,
        257, 5,   62,  0,   0,   257, 92,  1,   0,   0,   0,   258, 259, 5,   62,  0,   0,   259, 260, 5,   61,  0,
        0,   260, 94,  1,   0,   0,   0,   261, 263, 7,   0,   0,   0,   262, 261, 1,   0,   0,   0,   263, 264, 1,
        0,   0,   0,   264, 262, 1,   0,   0,   0,   264, 265, 1,   0,   0,   0,   265, 278, 1,   0,   0,   0,   266,
        267, 5,   48,  0,   0,   267, 271, 5,   120, 0,   0,   268, 269, 5,   48,  0,   0,   269, 271, 5,   88,  0,
        0,   270, 266, 1,   0,   0,   0,   270, 268, 1,   0,   0,   0,   271, 273, 1,   0,   0,   0,   272, 274, 7,
        1,   0,   0,   273, 272, 1,   0,   0,   0,   274, 275, 1,   0,   0,   0,   275, 273, 1,   0,   0,   0,   275,
        276, 1,   0,   0,   0,   276, 278, 1,   0,   0,   0,   277, 262, 1,   0,   0,   0,   277, 270, 1,   0,   0,
        0,   278, 96,  1,   0,   0,   0,   279, 281, 7,   0,   0,   0,   280, 279, 1,   0,   0,   0,   281, 282, 1,
        0,   0,   0,   282, 280, 1,   0,   0,   0,   282, 283, 1,   0,   0,   0,   283, 298, 1,   0,   0,   0,   284,
        286, 7,   0,   0,   0,   285, 284, 1,   0,   0,   0,   286, 289, 1,   0,   0,   0,   287, 285, 1,   0,   0,
        0,   287, 288, 1,   0,   0,   0,   288, 290, 1,   0,   0,   0,   289, 287, 1,   0,   0,   0,   290, 294, 5,
        46,  0,   0,   291, 293, 7,   0,   0,   0,   292, 291, 1,   0,   0,   0,   293, 296, 1,   0,   0,   0,   294,
        292, 1,   0,   0,   0,   294, 295, 1,   0,   0,   0,   295, 298, 1,   0,   0,   0,   296, 294, 1,   0,   0,
        0,   297, 280, 1,   0,   0,   0,   297, 287, 1,   0,   0,   0,   298, 308, 1,   0,   0,   0,   299, 301, 7,
        2,   0,   0,   300, 302, 7,   3,   0,   0,   301, 300, 1,   0,   0,   0,   301, 302, 1,   0,   0,   0,   302,
        304, 1,   0,   0,   0,   303, 305, 7,   0,   0,   0,   304, 303, 1,   0,   0,   0,   305, 306, 1,   0,   0,
        0,   306, 304, 1,   0,   0,   0,   306, 307, 1,   0,   0,   0,   307, 309, 1,   0,   0,   0,   308, 299, 1,
        0,   0,   0,   308, 309, 1,   0,   0,   0,   309, 311, 1,   0,   0,   0,   310, 312, 7,   4,   0,   0,   311,
        310, 1,   0,   0,   0,   311, 312, 1,   0,   0,   0,   312, 347, 1,   0,   0,   0,   313, 314, 5,   48,  0,
        0,   314, 318, 5,   120, 0,   0,   315, 316, 5,   48,  0,   0,   316, 318, 5,   88,  0,   0,   317, 313, 1,
        0,   0,   0,   317, 315, 1,   0,   0,   0,   318, 322, 1,   0,   0,   0,   319, 321, 7,   1,   0,   0,   320,
        319, 1,   0,   0,   0,   321, 324, 1,   0,   0,   0,   322, 320, 1,   0,   0,   0,   322, 323, 1,   0,   0,
        0,   323, 325, 1,   0,   0,   0,   324, 322, 1,   0,   0,   0,   325, 329, 5,   46,  0,   0,   326, 328, 7,
        1,   0,   0,   327, 326, 1,   0,   0,   0,   328, 331, 1,   0,   0,   0,   329, 327, 1,   0,   0,   0,   329,
        330, 1,   0,   0,   0,   330, 341, 1,   0,   0,   0,   331, 329, 1,   0,   0,   0,   332, 334, 7,   5,   0,
        0,   333, 335, 7,   3,   0,   0,   334, 333, 1,   0,   0,   0,   334, 335, 1,   0,   0,   0,   335, 337, 1,
        0,   0,   0,   336, 338, 7,   0,   0,   0,   337, 336, 1,   0,   0,   0,   338, 339, 1,   0,   0,   0,   339,
        337, 1,   0,   0,   0,   339, 340, 1,   0,   0,   0,   340, 342, 1,   0,   0,   0,   341, 332, 1,   0,   0,
        0,   341, 342, 1,   0,   0,   0,   342, 344, 1,   0,   0,   0,   343, 345, 7,   4,   0,   0,   344, 343, 1,
        0,   0,   0,   344, 345, 1,   0,   0,   0,   345, 347, 1,   0,   0,   0,   346, 297, 1,   0,   0,   0,   346,
        317, 1,   0,   0,   0,   347, 98,  1,   0,   0,   0,   348, 352, 7,   6,   0,   0,   349, 351, 7,   7,   0,
        0,   350, 349, 1,   0,   0,   0,   351, 354, 1,   0,   0,   0,   352, 350, 1,   0,   0,   0,   352, 353, 1,
        0,   0,   0,   353, 100, 1,   0,   0,   0,   354, 352, 1,   0,   0,   0,   355, 357, 7,   8,   0,   0,   356,
        355, 1,   0,   0,   0,   357, 358, 1,   0,   0,   0,   358, 356, 1,   0,   0,   0,   358, 359, 1,   0,   0,
        0,   359, 360, 1,   0,   0,   0,   360, 361, 6,   50,  0,   0,   361, 102, 1,   0,   0,   0,   362, 364, 5,
        13,  0,   0,   363, 365, 5,   10,  0,   0,   364, 363, 1,   0,   0,   0,   364, 365, 1,   0,   0,   0,   365,
        368, 1,   0,   0,   0,   366, 368, 5,   10,  0,   0,   367, 362, 1,   0,   0,   0,   367, 366, 1,   0,   0,
        0,   368, 369, 1,   0,   0,   0,   369, 370, 6,   51,  0,   0,   370, 104, 1,   0,   0,   0,   371, 372, 5,
        47,  0,   0,   372, 373, 5,   42,  0,   0,   373, 377, 1,   0,   0,   0,   374, 376, 9,   0,   0,   0,   375,
        374, 1,   0,   0,   0,   376, 379, 1,   0,   0,   0,   377, 378, 1,   0,   0,   0,   377, 375, 1,   0,   0,
        0,   378, 380, 1,   0,   0,   0,   379, 377, 1,   0,   0,   0,   380, 381, 5,   42,  0,   0,   381, 382, 5,
        47,  0,   0,   382, 383, 1,   0,   0,   0,   383, 384, 6,   52,  0,   0,   384, 106, 1,   0,   0,   0,   385,
        386, 5,   47,  0,   0,   386, 387, 5,   47,  0,   0,   387, 391, 1,   0,   0,   0,   388, 390, 8,   9,   0,
        0,   389, 388, 1,   0,   0,   0,   390, 393, 1,   0,   0,   0,   391, 389, 1,   0,   0,   0,   391, 392, 1,
        0,   0,   0,   392, 394, 1,   0,   0,   0,   393, 391, 1,   0,   0,   0,   394, 395, 6,   53,  0,   0,   395,
        108, 1,   0,   0,   0,   27,  0,   264, 270, 275, 277, 282, 287, 294, 297, 301, 306, 308, 311, 317, 322, 329,
        334, 339, 341, 344, 346, 352, 358, 364, 367, 377, 391, 1,   6,   0,   0};
    staticData->serializedATN = antlr4::atn::SerializedATNView(
        serializedATNSegment, sizeof(serializedATNSegment) / sizeof(serializedATNSegment[0]));

    antlr4::atn::ATNDeserializer deserializer;
    staticData->atn = deserializer.deserialize(staticData->serializedATN);

    const size_t count = staticData->atn->getNumberOfDecisions();
    staticData->decisionToDFA.reserve(count);
    for (size_t i = 0; i < count; i++) {
        staticData->decisionToDFA.emplace_back(staticData->atn->getDecisionState(i), i);
    }
    sysylexerLexerStaticData = staticData.release();
}

}  // namespace

SysYLexer::SysYLexer(CharStream* input) : Lexer(input) {
    SysYLexer::initialize();
    _interpreter =
        new atn::LexerATNSimulator(this, *sysylexerLexerStaticData->atn, sysylexerLexerStaticData->decisionToDFA,
                                   sysylexerLexerStaticData->sharedContextCache);
}

SysYLexer::~SysYLexer() { delete _interpreter; }

std::string SysYLexer::getGrammarFileName() const { return "SysY.g4"; }

const std::vector<std::string>& SysYLexer::getRuleNames() const { return sysylexerLexerStaticData->ruleNames; }

const std::vector<std::string>& SysYLexer::getChannelNames() const { return sysylexerLexerStaticData->channelNames; }

const std::vector<std::string>& SysYLexer::getModeNames() const { return sysylexerLexerStaticData->modeNames; }

const dfa::Vocabulary& SysYLexer::getVocabulary() const { return sysylexerLexerStaticData->vocabulary; }

antlr4::atn::SerializedATNView SysYLexer::getSerializedATN() const { return sysylexerLexerStaticData->serializedATN; }

const atn::ATN& SysYLexer::getATN() const { return *sysylexerLexerStaticData->atn; }

void SysYLexer::initialize() { ::antlr4::internal::call_once(sysylexerLexerOnceFlag, sysylexerLexerInitialize); }
